{"version":3,"sources":["minimux.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","dispatch","action","rerender","arguments","undefined","callbackOnion","middleware","sort","b","priority","reduce","nextLayer","layer","currentAction","func","coreFunction","Array","isArray","state","containers","updater","enqueueForceUpdate","listen","type","callback","listeners","push","connect","container","apply","newMiddleware","unshift","Object","defineProperty","value"],"mappings":"CAAA,QAAUA,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAAST,EAAQU,EAAOJ,GACvd,YAgDA,SAASK,GAASC,GACjB,GAAIC,GAAWC,UAAUN,QAAU,GAAsBO,SAAjBD,UAAU,IAA0BA,UAAU,EAWhE,QAAlBE,IACHC,EAAWC,KAAK,SAAUnB,EAAGoB,GAC5B,MAAOpB,GAAEqB,SAAWD,EAAEC,WAEvBJ,EAAgBC,EAAWI,OAAO,SAAUC,EAAWC,GACtD,MAAO,UAAUC,GAChB,MAAOD,GAAME,KAAKD,EAAeF,KAEhCI,IAECC,MAAMC,QAAQhB,KAClBA,GAAUA,GAEX,IAAIX,EACJ,KAAKA,EAAI,EAAGA,EAAIW,EAAOJ,OAAQP,IAC9BK,EAAQuB,MAAQA,EAAQb,EAAcJ,EAAOX,GAE9C,IAAIY,EACH,IAAKZ,EAAI,EAAGA,EAAI6B,EAAWtB,OAAQP,IAClC6B,EAAW7B,GAAG8B,QAAQC,mBAAmBF,EAAW7B,IAKvD,QAASgC,GAAOC,EAAMC,GACrBC,EAAUF,GAAQE,EAAUF,OAC5BE,EAAUF,GAAMG,KAAKF,GAGtB,QAASG,GAAQC,GAChBT,EAAWO,KAAKE,GAGjB,QAASC,GAAMC,GACd,GAAIrB,GAAWN,UAAUN,QAAU,GAAsBO,SAAjBD,UAAU,GAAmB,EAAIA,UAAU,EAEnFG,GAAWyB,SAAUtB,SAAUA,EAAUK,KAAMgB,IAE/CzB,EAAgB,KAhGjB2B,OAAOC,eAAetC,EAAS,cAC9BuC,OAAO,IAERvC,EAAQK,SAAWA,EACnBL,EAAQ2B,OAASA,EACjB3B,EAAQgC,QAAUA,EAClBhC,EAAQkC,MAAQA,CAqBhB,IAAIJ,MACAN,KACAb,KAEAY,EAAQvB,EAAQuB,SAIhBb,EAAgB,KAEhBU,EAAe,SAAsBd,GACxC,GAAIwB,EAAUxB,EAAOsB,MACpB,IAAK,GAAIjC,GAAI,EAAGA,EAAImC,EAAUxB,EAAOsB,MAAM1B,OAAQP,IAClDK,EAAQuB,MAAQA,EAAQO,EAAUxB,EAAOsB,MAAMjC,GAAG4B,EAAOjB,EAG3D,OAAOiB,cAyDG","file":"minimux.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.dispatch = dispatch;\nexports.listen = listen;\nexports.connect = connect;\nexports.apply = apply;\n/*\n * Minimux v1.0.0\n * Author: Steven Barnett (stevendesu) <steven.abarnett@gmail.com>\n * License: MIT +no-false-attribs (https://spdx.org/licenses/MITNFA.html)\n * \n * I made this library because I liked the ideology of Redux, but not the\n * implementation. This is my attempt to rebuild Redux with absolute minimal\n * functionality and to allow for absolute minimal bootstrapping in order to\n * write effective code.\n * \n * Considerations:\n *  - Two of our functions (connect and apply) are one-liners... why not just\n *    make \"containers\" and \"middleware\" public?\n *  - What should be the return values of each function?\n *  - How do you UNbind middleware or DISconnect containers? Or UNlisten?\n *  - Should it be possible to connect to a subset of the state? If you could\n *    bind reducers to subsets of state then it would be more modular\n *  - Could we add support for CJS, AMD, and UMD? Maybe as a build step?\n */\n\nvar listeners = {};\nvar containers = [];\nvar middleware = [];\n\nvar state = exports.state = {};\n\n// The \"onion\" describes the layers of middleware that we must parse through\n// in order to execute our action.\nvar callbackOnion = null;\n\nvar coreFunction = function coreFunction(action) {\n\tif (listeners[action.type]) {\n\t\tfor (var i = 0; i < listeners[action.type].length; i++) {\n\t\t\texports.state = state = listeners[action.type][i](state, action);\n\t\t}\n\t}\n\treturn state;\n};\n\nfunction dispatch(action) {\n\tvar rerender = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n\tif (\"development\" === \"development\") {\n\t\t// Incorrect usage of a library is going to break your code whether you\n\t\t// throw an exception or not. The difference is, exceptions are very\n\t\t// large strings of text (poor for minification) and mean nothing to\n\t\t// end users. For this reason, I only throw exceptions in development.\n\t\t// If you use the browser-compiled version (./minimux.js) intead of the\n\t\t// NPM module, it assumes development mode.\n\n\t}\n\tif (callbackOnion === null) {\n\t\tmiddleware.sort(function (a, b) {\n\t\t\treturn a.priority - b.priority;\n\t\t});\n\t\tcallbackOnion = middleware.reduce(function (nextLayer, layer) {\n\t\t\treturn function (currentAction) {\n\t\t\t\treturn layer.func(currentAction, nextLayer);\n\t\t\t};\n\t\t}, coreFunction);\n\t}\n\tif (!Array.isArray(action)) {\n\t\taction = [action];\n\t}\n\tvar i;\n\tfor (i = 0; i < action.length; i++) {\n\t\texports.state = state = callbackOnion(action[i]);\n\t}\n\tif (rerender) {\n\t\tfor (i = 0; i < containers.length; i++) {\n\t\t\tcontainers[i].updater.enqueueForceUpdate(containers[i]);\n\t\t}\n\t}\n}\n\nfunction listen(type, callback) {\n\tlisteners[type] = listeners[type] || [];\n\tlisteners[type].push(callback);\n}\n\nfunction connect(container) {\n\tcontainers.push(container);\n}\n\nfunction apply(newMiddleware) {\n\tvar priority = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n\tmiddleware.unshift({ priority: priority, func: newMiddleware });\n\t// Additional middleware was added. We need to recalulate this guy.\n\tcallbackOnion = null;\n}\n\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}