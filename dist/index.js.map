{"version":3,"sources":["index.js"],"names":["dispatch","listen","connect","apply","listeners","containers","middleware","state","callbackOnion","coreFunction","action","type","i","length","rerender","process","env","NODE_ENV","sort","a","b","priority","reduce","nextLayer","layer","func","currentAction","Array","isArray","updater","enqueueForceUpdate","callback","push","container","newMiddleware","unshift"],"mappings":";;;;;QAuCgBA,Q,GAAAA,Q;QAkCAC,M,GAAAA,M;QAKAC,O,GAAAA,O;QAIAC,K,GAAAA,K;AAlFhB;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIC,YAAY,EAAhB;AACA,IAAIC,aAAa,EAAjB;AACA,IAAIC,aAAa,EAAjB;;AAEO,IAAIC,wBAAQ,EAAZ;;AAEP;AACA;AACA,IAAIC,gBAAgB,IAApB;;AAEA,IAAMC,eAAe,SAAfA,YAAe,SAAU;AAC9B,KAAIL,UAAUM,OAAOC,IAAjB,CAAJ,EAA6B;AAC5B,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIR,UAAUM,OAAOC,IAAjB,EAAuBE,MAA3C,EAAmDD,GAAnD,EAAyD;AACxD,WATQL,KASR,WAAQH,UAAUM,OAAOC,IAAjB,EAAuBC,CAAvB,EAA0BL,KAA1B,EAAiCG,MAAjC,CAAR;AACA;AACD;AACD,QAAOH,KAAP;AACA,CAPD;;AASO,SAASP,QAAT,CAAkBU,MAAlB,EAA2C;AAAA,KAAjBI,QAAiB,yDAAN,IAAM;;AACjD,KAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA6C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACD,KAAIT,kBAAkB,IAAtB,EAA6B;AAC5BF,aAAWY,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACzB,UAAOD,EAAEE,QAAF,GAAaD,EAAEC,QAAtB;AACA,GAFD;AAGAb,kBAAgBF,WAAWgB,MAAX,CAAkB,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AACvD,UAAO,yBAAiB;AACvB,WAAOA,MAAMC,IAAN,CAAWC,aAAX,EAA0BH,SAA1B,CAAP;AACA,IAFD;AAGA,GAJe,EAIbd,YAJa,CAAhB;AAKA;AACD,KAAI,CAACkB,MAAMC,OAAN,CAAclB,MAAd,CAAL,EAA6B;AAC5BA,WAAS,CAACA,MAAD,CAAT;AACA;AACD,KAAIE,CAAJ;AACA,MAAKA,IAAI,CAAT,EAAYA,IAAIF,OAAOG,MAAvB,EAA+BD,GAA/B,EAAqC;AACpC,UAxCSL,KAwCT,WAAQC,cAAcE,OAAOE,CAAP,CAAd,CAAR;AACA;AACD,KAAIE,QAAJ,EAAe;AACd,OAAKF,IAAI,CAAT,EAAYA,IAAIP,WAAWQ,MAA3B,EAAmCD,GAAnC,EAAyC;AACxCP,cAAWO,CAAX,EAAciB,OAAd,CAAsBC,kBAAtB,CAAyCzB,WAAWO,CAAX,CAAzC;AACA;AACD;AACD;;AAEM,SAASX,MAAT,CAAgBU,IAAhB,EAAsBoB,QAAtB,EAAgC;AACtC3B,WAAUO,IAAV,IAAkBP,UAAUO,IAAV,KAAmB,EAArC;AACAP,WAAUO,IAAV,EAAgBqB,IAAhB,CAAqBD,QAArB;AACA;;AAEM,SAAS7B,OAAT,CAAiB+B,SAAjB,EAA4B;AAClC5B,YAAW2B,IAAX,CAAgBC,SAAhB;AACA;;AAEM,SAAS9B,KAAT,CAAe+B,aAAf,EAA4C;AAAA,KAAdb,QAAc,yDAAH,CAAG;;AAClDf,YAAW6B,OAAX,CAAmB,EAAEd,kBAAF,EAAYI,MAAMS,aAAlB,EAAnB;AACA;AACA1B,iBAAgB,IAAhB;AACA","file":"index.js","sourcesContent":["/*\n * Minimux v1.0.0\n * Author: Steven Barnett (stevendesu) <steven.abarnett@gmail.com>\n * License: MIT +no-false-attribs (https://spdx.org/licenses/MITNFA.html)\n * \n * I made this library because I liked the ideology of Redux, but not the\n * implementation. This is my attempt to rebuild Redux with absolute minimal\n * functionality and to allow for absolute minimal bootstrapping in order to\n * write effective code.\n * \n * Considerations:\n *  - Two of our functions (connect and apply) are one-liners... why not just\n *    make \"containers\" and \"middleware\" public?\n *  - What should be the return values of each function?\n *  - How do you UNbind middleware or DISconnect containers? Or UNlisten?\n *  - Should it be possible to connect to a subset of the state? If you could\n *    bind reducers to subsets of state then it would be more modular\n *  - Could we add support for CJS, AMD, and UMD? Maybe as a build step?\n */\n\nlet listeners = {};\nlet containers = [];\nlet middleware = [];\n\nexport var state = {};\n\n// The \"onion\" describes the layers of middleware that we must parse through\n// in order to execute our action.\nvar callbackOnion = null;\n\nconst coreFunction = action => {\n\tif( listeners[action.type] ) {\n\t\tfor( var i = 0; i < listeners[action.type].length; i++ ) {\n\t\t\tstate = listeners[action.type][i](state, action);\n\t\t}\n\t}\n\treturn state;\n}\n\nexport function dispatch(action, rerender = true) {\n\tif( process.env.NODE_ENV === \"development\" ) {\n\t\t// Incorrect usage of a library is going to break your code whether you\n\t\t// throw an exception or not. The difference is, exceptions are very\n\t\t// large strings of text (poor for minification) and mean nothing to\n\t\t// end users. For this reason, I only throw exceptions in development.\n\t\t// If you use the browser-compiled version (./minimux.js) intead of the\n\t\t// NPM module, it assumes development mode.\n\t\t\n\t}\n\tif( callbackOnion === null ) {\n\t\tmiddleware.sort((a, b) => {\n\t\t\treturn a.priority - b.priority;\n\t\t});\n\t\tcallbackOnion = middleware.reduce((nextLayer, layer) => {\n\t\t\treturn currentAction => {\n\t\t\t\treturn layer.func(currentAction, nextLayer);\n\t\t\t};\n\t\t}, coreFunction)\n\t}\n\tif( !Array.isArray(action) ) {\n\t\taction = [action];\n\t}\n\tvar i;\n\tfor( i = 0; i < action.length; i++ ) {\n\t\tstate = callbackOnion(action[i]);\n\t}\n\tif( rerender ) {\n\t\tfor( i = 0; i < containers.length; i++ ) {\n\t\t\tcontainers[i].updater.enqueueForceUpdate(containers[i]);\n\t\t}\n\t}\n}\n\nexport function listen(type, callback) {\n\tlisteners[type] = listeners[type] || [];\n\tlisteners[type].push(callback);\n}\n\nexport function connect(container) {\n\tcontainers.push(container);\n}\n\nexport function apply(newMiddleware, priority = 0) {\n\tmiddleware.unshift({ priority, func: newMiddleware });\n\t// Additional middleware was added. We need to recalulate this guy.\n\tcallbackOnion = null;\n}\n"],"sourceRoot":"/source/"}